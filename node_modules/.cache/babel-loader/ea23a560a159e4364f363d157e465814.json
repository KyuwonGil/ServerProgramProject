{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KyuwonGil\\\\Desktop\\\\bulletin_board\\\\src\\\\App.js\";\nimport React from 'react';\nimport Board from './Components/BulletinBoradForm';\nimport Login from './Components/LoginForm';\nimport SignUp from './Components/SignUpForm';\nimport Frame from './Containers/Frame';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.render = () => /*#__PURE__*/React.createElement(Frame, {\n      type: this.state.type,\n      component: this.state.component,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 18\n      }\n    });\n\n    this.state = {\n      type: 'main',\n      component: null\n    };\n  }\n\n  getComponent(form) {\n    if (form.name === 'Board') return /*#__PURE__*/React.createElement(Board, {\n      pList: form.pList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 14\n      }\n    });else if (form.name === 'Login') return /*#__PURE__*/React.createElement(Login, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 14\n      }\n    });else if (form.name === 'SignUp') return /*#__PURE__*/React.createElement(SignUp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }\n    });\n  }\n\n  componentDidMount() {\n    fetch('api/board', {\n      method: 'POST'\n    }).then(res => res.json()).then(data => this.setState({\n      type: data.type,\n      component: this.getComponent(data.form)\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/KyuwonGil/Desktop/bulletin_board/src/App.js"],"names":["React","Board","Login","SignUp","Frame","App","Component","constructor","props","render","state","type","component","getComponent","form","name","pList","componentDidMount","fetch","method","then","res","json","data","setState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAwBnBC,MAxBmB,GAwBV,mBAAM,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,IAAxB;AAA8B,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWE,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBI;;AAEjB,SAAKF,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAG,MADI;AAEXC,MAAAA,SAAS,EAAG;AAFD,KAAb;AAID;;AAEDC,EAAAA,YAAY,CAACC,IAAD,EAAM;AAChB,QAAGA,IAAI,CAACC,IAAL,KAAc,OAAjB,EACE,oBAAO,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAED,IAAI,CAACE,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP,CADF,KAEK,IAAGF,IAAI,CAACC,IAAL,KAAc,OAAjB,EACH,oBAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP,CADG,KAEA,IAAGD,IAAI,CAACC,IAAL,KAAc,QAAjB,EACH,oBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,WAAD,EAAc;AACjBC,MAAAA,MAAM,EAAE;AADS,KAAd,CAAL,CAEGC,IAFH,CAEQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFf,EAGGF,IAHH,CAGQG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACb,MAAAA,IAAI,EAAGY,IAAI,CAACZ,IAAb;AAAmBC,MAAAA,SAAS,EAAG,KAAKC,YAAL,CAAkBU,IAAI,CAACT,IAAvB;AAA/B,KAAd,CAHhB;AAID;;AAxB+B;;AA6BlC,eAAeT,GAAf","sourcesContent":["import React from 'react'\nimport Board from './Components/BulletinBoradForm'\nimport Login from './Components/LoginForm'\nimport SignUp from './Components/SignUpForm'\nimport Frame from './Containers/Frame'\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      type : 'main',\n      component : null\n    }\n  }\n\n  getComponent(form){\n    if(form.name === 'Board')\n      return <Board pList={form.pList}/>\n    else if(form.name === 'Login')\n      return <Login/>\n    else if(form.name === 'SignUp')\n      return <SignUp/>\n  }\n\n  componentDidMount() {\n    fetch('api/board', {\n      method: 'POST'\n    }).then(res => res.json())\n      .then(data => this.setState({type : data.type, component : this.getComponent(data.form)}))\n  }\n\n  render = () => <Frame type={this.state.type} component={this.state.component} /> \n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}